#!/bin/bash
if [[ $OSTYPE == linux* ]]; then
    alias flush='sudo systemd-resolve --flush-caches'

    # Global Bash #
    alias c='clear'
    alias lsa='ls -al'
    alias lla='ll -al'
    alias cd~='cd $HOME'
    alias cd.='cd ..'
    alias cd..='cd ../../'
    alias cd...='cd ../../../'
    alias vizsh='vim ~/.zshrc'
    alias vialias='vim ~/.config/.aliases'
    alias vienv='vim ~/.config/.env'
    alias vihosts='sudo vim /etc/hosts'
    alias sozsh='source ~/.zshrc'
    alias upzsh='upgrade_oh_my_zsh'
    alias hs='history | grep'
    alias mkcd='function _mkcd(){ mkdir -p "$1"; cd "$1" };_mkcd'
    alias rm:f='rm -rf'

    # Application

    # Path
    alias lab:config='cd $HOME/Labs/config'
    alias lab:infra='cd $HOME/Labs/infra'
    alias lab:apps='cd $HOME/Labs/apps'
    alias pj='cd $HOME/projects && ll -al'
    alias dl='cd $HOME/Downloads'

    # Tree
    alias tree='tree -C'

    # Git Command Alises #
    alias g='git'
    alias g:i='git init'
    alias g:s='git status'
    alias g:a.='git add .'
    alias g:aa='git add -All'
    alias g:b='function _gbranch(){ git branch -$1 };_gbranch'
    alias g:bd='git branch -D'
    alias g:bdf='function _gbranchdf(){ git push $1 --delete --force };_gbranchdf'
    alias g:cl='git clone'
    alias g:cm='function _gcommit(){ git commit -m $1 };_gcommit'
    alias g:co='git checkout'
    alias g:co:b='git checkout -b'
    alias g:mr='git merge'
    alias g:mrs='git merge --no-ff --no-commit'
    alias g:ps='git push -u'
    alias g:ra='git remote add'
    alias g:rr='git remote rm'
    alias g:rv='git remote -v'
    alias g:rn='git remote set-url'
    alias g:pl='git pull'
    alias g:pull='function _gpull(){ git pull ${1:-origin} "$(git symbolic-ref --short HEAD)" };_gpull'
    alias g:push='function _gpush(){ git push ${1:-origin} "$(git symbolic-ref --short HEAD)" };_gpush'
    alias g:t='git tag'
    alias g:tag='git_tagging'
    # Git with Emoji
    alias g:new='gnew'
    alias g:imp='gimp'
    alias g:fix='gfix'
    alias g:rls='grls'
    alias g:doc='gdoc'
    alias g:tst='gtst'
    alias g:brk='gbrk'
    # Git with Emoji with Push
    alias g:new:p='gnew --push'
    alias g:imp:p='gimp --push'
    alias g:fix:p='gfix --push'
    alias g:rls:p='grls --push'
    alias g:doc:p='gdoc --push'
    alias g:tst:p='gtst --push'
    alias g:brk:p='gbrk --push'

    # Git Flow
    alias gf='git flow'
    alias gf:i='git flow init'
    alias gf:f='git flow feature'
    alias gf:h='git flow hotfix'
    alias gf:r='git flow release'
    alias gf:fs='git flow feature start'
    alias gf:hs='git flow hotfix start'
    alias gf:rs='git flow release start'
    alias gf:ff='git flow feature finish'
    alias gf:fp='git flow feature publish'
    alias gf:hf='git flow hotfix finish'
    alias gf:rf='git flow release finish'
    alias gf:fp='git flow feature publish'
    alias gf:hp='git flow hotfix publish'
    alias gf:rp='git flow release publish'
    alias gf:fp='git flow feature pull'

    # Handling Service (start, stop, restart)
    alias s:l='sudo systemctl list-units --type=service'
    alias s:l:a='sudo systemctl list-units --type=service --state=active'
    alias s:l:r='sudo systemctl list-units --type=service --state=running'
    alias s:l:r='sudo systemctl list-units --type=service --state=enabled'
    alias s:set='function _service(){ sudo systemctl $1 $2.service};_service'

    # NVM
    alias nvm:l='nvm ls'
    alias nvm:l:r='nvm ls-remote --lts'
    alias nvm:v:r="nvm version-remote --lts"
    alias nvm:in='nvm install'
    alias nvm:in:lts='nvm install '\''lts/*'\'' --reintsall-packages-from=default --latest-npm'
    alias nvm:un='nvm uninstall'
    alias nvm:u='nvm use'
    alias nvm:d='nvm alias default'

    # NodeJs NPM #
    alias node:v='node -v'
    alias npm:v='npm -v'
    alias npm:i='npm init'
    alias npm:in='npm install'
    alias npm:ud='npm update'
    alias npm:dev='npm run dev'
    alias npm:build='npm run build'
    alias npm:build:s='npm run build-staging'
    alias npm:build:p='npm run build-production'
    alias npm:audit='npm audit fix'
    alias npm:audit:f='npm audit fix --force'

    # PHP Composer
    # alias com='composer'
    alias com:v='composer -V'
    alias com:i='composer init'
    alias com:in='composer install'
    alias com:ud='composer update'
    alias com:ud:g='composer global update'
    alias com:ug='composer upgrade'
    alias com:re='composer require'
    alias com:re:g='composer global require'
    alias com:re:d='composer require --dev'
    alias com:rm='composer remove'
    alias com:rm:d='composer remove --dev'
    alias com:gs='composer global show'

    # Laravel Artisan
    alias pa='php artisan'
    alias pa:ls='pa list'
    alias pa:v='pa --version'

    alias web:new='new_website_project'

    # Docker
    alias dcc='docker-compose'
    alias dcc:v='docker-compose --version'
    alias dcc:set='function _doccomp(){docker-compose $1};_doccomp'
    alias dcc:b='docker-compose up -d --build -f'
    # Must be run first because images are attached to containers
    alias dc='docker'
    alias dc:i='docker info'
    alias dc:rc:a='docker rm -f $(docker ps -a -q)'
    # Delete every Docker image
    alias dc:ri:a='docker rmi -f $(docker images -q)'

    # Tmuxinator
    alias mux='tmuxinator'
    alias mux:v='tmuxinator version'
    alias mux:s='tmuxinator start'
    alias mux:st='tmuxinator stop'
    alias mux:n='tmuxinator new'
    alias mux:l='tmuxinator list'
    alias mux:e='tmuxinator edit'
    alias mux:c='tmuxinator copy'
    alias mux:d='tmuxinator delete'
    alias mux:doc='tmuxinator doctor'
    alias mux:debug='tmuxinator debug'

    # Tmux
    alias tx='tmux'
    alias tx:i='tmux info'
    alias tx:a='tmux attach -t'
    alias tx:n='tmux new -s'
    alias tx:l='tmux list'
    alias tx:k:t='tmux kill-session -t'
    alias tx:k:a='tmux kill-session -a'
    alias tx:k:ser='tmux kill-server'

    # Ansible
    alias a='ansible'
    alias a:l='ansible --list-hosts all'
    alias ap='ansible-playbook'
    alias a:i='new_ansible'

    # Terraform
    alias tf='terraform'
    alias tf:i='terraform init'
    alias tf:v='terraform validate'
    alias tf:p='terraform plan'
    alias tf:a='terraform apply'
    alias tf:d='terraform destroy'
    alias tf:o='terraform output'
    alias tf:h='terraform -help'

    # Terragrunt
    alias tg='terragrunt'
    alias tg:o='terragrunt output'
    alias tg:p='terragrunt plan'
    alias tg:a='terragrunt apply'
    alias tg:d='terragrunt destroy'

    # Vagrant
    alias vg='vagrant'
    alias vg:i='vagrant init'
    alias vg:u='vagrant up'
    alias vg:d='vagrant destroy'
    alias vg:df='vagrant destroy -f'
    alias vg:ssh='vagrant ssh'
    alias vg:sshc='vagrant ssh-config'
    alias vg:rdp='vagrant rdp'
    alias vg:h='vagrant halt'
    alias vg:sp='vagrant suspend'
    alias vg:s='vagrant status'
    alias vg:re='vagrant resume'
    alias vg:sg='vagrant global-status'
    alias vg:pr='vagrant provisioning'
    alias vg:r='vagrant reload'
    alias vg:r:pr='vagrant reload --provisioning'
    alias vg:ps='vagrant push'
    alias vg:sh='vagrant share'
    alias vg:b:a='vagrant box add'
    alias vg:b:r='vagrant box remove'
    alias vg:b:l='vagrant box list'
    alias vg:b:o='vagrant box outdated'
    alias vg:b:u='vagrant box update'
    alias vg:p:i='vagrant plugin install'
    alias vg:p:l='vagrant plugin list'
    alias vg:p:ui='vagrant plugin uninstall'
    alias vg:p:u='vagrant plugin update'

    # Youtube download cli
    alias yd:v="youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]' $1 -o ~/Videos/youtube/'%(title)s.%(ext)s' --prefer-ffmpeg --ignore-config"
    alias yd:vp="youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]' $1 -o ~/Videos/youtube/'%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' --prefer-ffmpeg --ignore-config --yes-playlist"
    alias yd:a="youtube-dl -f 'bestaudio[ext=m4a]' $1 -o ~/Music/youtube/'%(title)s.%(ext)s' --ignore-config --prefer-ffmpeg --extract-audio -x --audio-format mp3"
    alias yd:ap="youtube-dl -f 'bestaudio[ext=m4a]' $1 -o ~/Music/youtube/%(playlist)s/[%(playlist_index)s] - %(title)s.%(ext)s' --ignore-config --prefer-ffmpeg --extract-audio -x --audio-format mp3 --ignore-errors --yes-playlist"

    # Transmission cli
    alias tsm="transmission-remote"
fi
